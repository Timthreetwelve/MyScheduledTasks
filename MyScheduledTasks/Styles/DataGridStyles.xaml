<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:config="clr-namespace:MyScheduledTasks.Configuration">

    <!--#region Cell style-->
    <Style TargetType="DataGridCell"
           x:Key="DisplayOnly"
           BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>

        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Style for DataGrid input cells-->
    <Style TargetType="DataGridCell"
           x:Key="Input"
           BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Style for DataGrid cells-->
    <Style TargetType="DataGridCell"
           x:Key="DgCellStyle"
           BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>
    <!--#endregion-->

    <!--#region Style for DataGrid rows-->
    <Style TargetType="DataGridRow"
           x:Key="DisplayOnlyRows"
           BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Background}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Right align cell text-->
    <Style TargetType="DataGridCell"
           x:Key="AlignRight"
           BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <!--#endregion-->

    <!--#region Style for DataGrid results column cells-->
    <Style TargetType="DataGridCell"
           x:Key="ResultCell"
           BasedOn="{StaticResource MaterialDesignDataGridCell}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="TextBlock.TextAlignment" Value="Left" />
        <Style.Triggers>
            <!--  Note: Static Resource must be used in a data trigger  -->
            <!--  Note: Values are assigned in ScheduledTask.cs (TaskResultShort)  -->
            <DataTrigger Binding="{Binding TaskResultShort}"
                         Value="{StaticResource TaskResult_NonZero}">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="Crimson" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TaskResultShort}"
                         Value="{StaticResource TaskResult_Terminated}">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="Crimson" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TaskResultShort}"
                         Value="{StaticResource TaskResult_FileNotFound}">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="Crimson" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TaskResultShort}"
                         Value="{StaticResource TaskResult_NotYetRun}">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="DodgerBlue" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TaskResultShort}"
                         Value="{StaticResource TaskResult_Running}">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="LimeGreen" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TaskResultShort}"
                         Value="{StaticResource TaskResult_Null}">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="Orange" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Style for DataGrid status column cells-->
    <Style TargetType="DataGridCell"
           x:Key="StatusCell"
           BasedOn="{StaticResource MaterialDesignDataGridCell}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="1,0,0,0" />
        <Setter Property="TextBlock.TextAlignment" Value="Left" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding TaskStatus}"
                         Value="Running">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="LimeGreen" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TaskResultShort}"
                         Value="{StaticResource TaskResult_Null}">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="Orange" />
            </DataTrigger>
            <DataTrigger Binding="{Binding TaskStatus}"
                         Value="Disabled">
                <Setter Property="FontStyle" Value="Italic" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="Gray" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Style to center DataGrid column headers-->
    <Style TargetType="DataGridColumnHeader"
           x:Key="HeaderCenter"
           BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    <!--#endregion-->

    <!--#region Style for DataGrid column headers-->
    <Style TargetType="DataGridColumnHeader"
           x:Key="DgColumnHeader"
           BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="FontSize">
            <Setter.Value>
                <Binding Path="SelectedFontSize"
                         Source="{x:Static config:UserSettings.Setting}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="{DynamicResource materialDesignBody}" />
        <Setter Property="Opacity" Value="0.8" />
        <Setter Property="Padding" Value="15,3" />
    </Style>
    <!--#endregion-->
</ResourceDictionary>